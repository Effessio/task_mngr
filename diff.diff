diff --git a/users/models.py b/users/models.py
index 71a8362..199d553 100644
--- a/users/models.py
+++ b/users/models.py
@@ -1,3 +1,52 @@
 from django.db import models
+from django.contrib.auth.models import AbstractBaseUser, \
+    PermissionsMixin, BaseUserManager
 
-# Create your models here.
+
+class MyUserManager(BaseUserManager):
+
+    def create_user(self, user_name, password, first_name, last_name):
+        user = self.model(user_name=user_name, password=password, first_name=first_name, last_name=last_name)
+        user.set_password(password)
+        user.save(using=self._db)
+        return user
+
+    def create_superuser(self, user_name, password, first_name, last_name):
+        user = self.create_user(user_name, password, first_name, last_name)
+        user.is_admin = True
+        user.save(using=self._db)
+        return user
+
+
+class User(AbstractBaseUser, PermissionsMixin):
+
+    user_name = models.CharField(max_length=30, unique=True)
+    USERNAME_FIELD = 'user_name'
+    first_name = models.CharField(max_length=30)
+    last_name = models.CharField(max_length=30)
+    created_at = models.DateField('date created', auto_now_add=True)
+    image = models.ImageField(required=False)
+    objects = MyUserManager()
+    is_active = models.BooleanField(default=True)
+    is_admin = models.BooleanField(default=False)
+
+
+    def __unicode__(self):
+        return self.user_name
+
+
+    def get_full_name(self):
+        return self.first_name+''+self.last_name
+
+    def get_short_name(self):
+        return self.user_name
+
+    def has_perm(self, perm, obj=None):
+        return self.is_admin
+
+    def has_module_perms(self, app_label):
+        return self.is_admin
+
+    @property
+    def is_staff(self):
+        return self.is_admin
